# -*- coding: utf-8 -*-
"""(02)DataScience_Process.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fed1djEvm2hWjGejy-JxWhafbw3Ppv-Z

## **Sea Level Rise: Rudimentary Data Science Notebook**

---

**PROBLEM DEFINITION**

- Question: what is the rate of global sea level rise in mm/yr?
- Data required: sea level in mm over time

**DATA COLLECTION**

- This data is from the government website NOAA (National Oceanic and Atmospheric Administration) https://www.star.nesdis.noaa.gov/socd/lsa/SeaLevelRise/LSA_SLR_timeseries.php
- There are a bunch of CSV (Comma Separated Values) files in the bottom
- Here, the CSV data from the 'Seasonal signals removed' is considered. https://www.star.nesdis.noaa.gov/socd/lsa/SeaLevelRise/slr/slr_sla_gbl_free_ref_90.csv
"""

import pandas as pd

# -- load the NOAA sea level rise data
fname = "https://www.star.nesdis.noaa.gov/socd/lsa/SeaLevelRise/slr/slr_sla_gbl_free_ref_90.csv"
data = pd.read_csv(fname, skiprows=5) #skiprows is used to skip the rows above, as there is some info irrelevant to the info that is needed here

type(data) #this is a dataframe

data

"""**DATA PREPARATION**"""

data.columns #gives the list of names of columns in the dataframe
data.columns[0] #gives the name of the first column
data.columns[1:3] #This is slicing. here col1 is inclusive and col3 is not included
data.columns[1:] # This goes from 1 to the end. it skips the col0 (year)

cols = data.columns[1:] #we are taking the columns into the 'cols' variable
data[cols] #gives the data frame with the specified columns

# -- subset the data to exclude the year
sub = data[cols] #we are creating like a subset of data 'sub', which includes all the data excluding the year column
sub

sub.min() #gives the min value for each column

sub.min(axis=1)
#gives a columns that gives the min value across the rows.
#axis=1 goes across x-axis, axis=0 goes across y-axis
#default is axis=0

# -- create minimum sea level column in the original data frame
data["minlev"] = sub.min(axis=1)
data

#a new column is added in the original dataframe, which has the min value of each satelite values.
#dataframe is said to be modified

data.plot("year", "minlev")

"""- This is a minlev plot as a function of year
- It can be observed that the sea level is increasing, (not monotonically, but in general it is going upwards)
- straight line fit can be a good model for this data

**MACHINE LEARNING**
"""

import numpy as np
slope, offset = np.polyfit(data["year"], data["minlev"], 1)

"""- numpy has a builtin function called 'polyfit' which is polynomial function
- np.polyfit(X, Y, degree)
- here the degree of the polynomial is 1 - which is the straight line (y=mx+c)
- The returned values are slope and offset.
"""

slope

offset

"""**PROBLEM SOLUTION**"""

print("rate of sea level rise is {0:.2f} mm/yr".format(slope))
